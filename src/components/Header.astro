---
import ThemeToggle from "./ThemeToggle.astro";
import ButtonCv from "./ButtonCv"
import MobileMenu from './MobileMenu.jsx'; // Importa el componente React

import cv from 'public/cv.json'; // Asegúrate de ajustar la ruta según tu estructura

const navItems = cv.navItems;
---

<header 
  class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2"
>
  <!-- Menú de Escritorio -->
  <nav id="navDestock" class="flex px-3 text-sm font-medium rounded-full text-gray-600 dark:text-gray-200 justify-center items-center">
    {
      navItems.map((link) => (
        <a
          class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500"
          aria-label={link.label}
          href={link.url}
        >
          {link.title}
        </a>
      ))
    }
    <ButtonCv />
    <ThemeToggle />
  </nav>
  
  <!-- Menú Móvil -->
  <MobileMenu id="menuMovile" navItems={navItems}  client:load  />
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const sections = document.querySelectorAll("section")
    const navItems = document.querySelectorAll("header nav a")

    const callback = (entries: any[]) => {
      entries.forEach((entry: { isIntersecting: any; target: { id: string | null } }) => {
        if (entry.isIntersecting) {
          navItems.forEach((item) => {
            if (item.getAttribute("aria-label") === entry.target.id) {
              item.classList.add("text-blue-500")
            } else {
              item.classList.remove("text-blue-500")
            }
          })
        }
      })
    }

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.3,
    })

    sections.forEach((section) => {
      observer.observe(section)
    })

    // Cleanup function
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect()
      } else {
        sections.forEach((section) => {
          observer.observe(section)
        })
      }
    }
  })
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    @apply dark:bg-gray-800/90 bg-white/50;
  }
  
  @media (max-width: 768px) {
    #navDestock {
      display: none;
    }
  }
ZZZZZ

  @keyframes nav-shadown {
    0% {
      @apply dark:bg-gray-800/0 bg-white/0;
    }
    to {
      @apply shadow-lg ring-1 backdrop-blur ring-white/10;
    }
  }
</style>
